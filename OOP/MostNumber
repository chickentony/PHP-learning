<?php
/**
 * Дан массив чисел (float или/и int). Вам нужно найти разницу между самым большим (максимум) и самым малым (минимум) элементом.
 * Ваша функция должна уметь работать с неопределенным количеством аргументов. Если аргументов нет, то функция возвращает 0 (ноль).
 * Числа с плавающей точкой представлены в компьютерах как двоичная дробь. Результат проверяется с точностью до третьего знака, как ±0.001
 */

class MostNumber
{
    private $maxValue = null;
    private $minValue = null;

    public function getDifference($array)
    {
        $arrayLength = count($array);
        //Предусловие 0 ≤ len(args) ≤ 20
        if ($arrayLength > 20 || $arrayLength < 0) {
            throw new Exception('Длина массива больше 20 символов.');
        } else {
            for ($i = 0; $i < $arrayLength; $i++) {
                //Предусловие all(-100 < x < 100 for x in args)
                if (-100 < $array[$i] && $array[$i] < 100) {
                    $minValue = min($array);
                    $maxValue = max($array);
                    $result = $maxValue - $minValue;
                } else {
                    throw new Exception('В массиве есть аргумент больше 100 или меньше -100');
                }
            }
        }
        return $result;
    }

    public function getDifferenceCustom($array)
    {
        $this->setMaxValue($array);
        $this->setMinValue($array);

        $arrayLength = count($array);
        if ($arrayLength < 0 || $arrayLength > 20) {
            throw new Exception('Длина массива больше 20 символов.');
        } else {
            for ($i = 0; $i < $arrayLength; $i++) {
                if (-100 < $array[$i] && $array[$i] < 100) {
                    $result = $this->maxValue - $this->minValue;

                } else {
                   {
                       throw new Exception('В массиве есть аргумент больше 100 или меньше -100');
                   }
                }
            }
        }
        return $result;
    }

    private function setMinValue($array)
    {
        $minValue = $array[0];
        for ($i = 1; $i < count($array); $i++) {
            if ($array[$i] < $minValue) {
                $minValue = $array[$i];
            }
        }
        $this->minValue = $minValue;
    }

    private function setMaxValue($array)
    {
        $maxValue = $array[0];
        for ($i = 1; $i < count($array); $i++) {
            if ($array[$i] > $maxValue) {
                $maxValue = $array[$i];
            }
        }
        $this->maxValue = $maxValue;
    }
}

$numberArray = new MostNumber();
//Рещение через встроенные функции min & max.
try {
    echo $numberArray->getDifference([10.2, 2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5]);
}
catch (Exception $e) {
    echo $e->getMessage();
}
echo '<br>';
//Кастомное решение.
try {
    echo $numberArray->getDifferenceCustom([10.2, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5, -2.2, 0, 1.1, 0.5]);
}
catch (Exception $e) {
    echo $e->getMessage();
}
